{
  "name": "PGweb for Heroku Private Spaces-based Postgres",
  "tagline": "Cross-platform client for PostgreSQL Private databases (fork of sosedoff/pgweb)",
  "body": "# PGWeb for Heroku Private Spaces Postgres\r\n\r\nWeb-based PostgreSQL database browser written in Go...but modified to deploy Heroku Postgres within Heroku Private Spaces. I recommend you implement proper authentication to this app...don't just use the current method of a CONFIG_VAR for auth. Feel free to use (https://elements.heroku.com/addons/auth0)[Auth0] and configure it to authorize only Heroku-SSO users within your Enterprise Org (PGWeb auth = Auth0 which = Heroku SSO which uses SAML-based) \r\n\r\n[![Release](https://img.shields.io/github/release/sosedoff/pgweb.svg?label=Release)](https://github.com/baliles/pgweb/releases)\r\n\r\n## Overview\r\n\r\nPGWeb is a web-based database browser for PostgreSQL, written in Go and works\r\non Heroku Postgres for Common and Private instances. Main idea behind using Go for backend development\r\nis to utilize ability of the compiler to produce zero-dependency binaries for \r\nmultiple platforms. PGWeb was created as an attempt to build very simple and portable\r\napplication to work with Heroku PostgreSQL databases.\r\n\r\n[See application screenshots](SCREENS.md)\r\n\r\n## Features\r\n\r\n- Cross-platform support OSX/Linux/Windows 32/64-bit (but you're on your own with sosedoff/pgweb as this has only been modified enough to get it running against Heroku Private Spaces Postgres)\r\n- Simple installation (distributed as a single binary)\r\n- Zero dependencies\r\n- Works with PostgreSQL 9.1+\r\n- SSH Connections\r\n- Multiple database sessions\r\n- Simple database browser\r\n- Execute and analyze custom SQL queries\r\n- Table and query data export to CSV/JSON/XML\r\n- Query history\r\n- Server bookmarks\r\n\r\nVisit [WIKI](https://github.com/baliles/pgweb/pgweb/wiki) for more details\r\n\r\n## Demo\r\n\r\nIt's kind of hard to let you see it running when it requires a Password to sign in (and no, I'm not providing my demo account :-)\r\n\r\n## Installation\r\n\r\n[Precompiled binaries](https://github.com/sosedoff/pgweb/releases) for supported \r\noperating systems are available.\r\n\r\n[More installation options](https://github.com/sosedoff/pgweb/wiki/Installation)\r\n\r\n## Usage\r\n\r\n## Deploy on Heroku\r\n\r\n[![Heroku Deploy](https://www.herokucdn.com/deploy/button.svg)](https://heroku.com/deploy?template=https://github.com/herokumx/pgweb)\r\n\r\nMake sure you have PostgreSQL server running on the same Heroku App that you're deploying this to (you can add Postgres after you've deployed this if you're putting the Cart before the proverbial Horse (ie `yourPrivateSpaces_postgresserver.herokuapp.com:5432)\r\n\r\n*Plan Name\tProvisioning Name\t        Cache Size\tStorage Limit\tConnection Limit\r\nPrivate 0\theroku-postgresql:private-0\t1 GB\t        64 GB\t        120\t\r\nPrivate 2\theroku-postgresql:private-2\t3.5 GB\t        256 GB\t        400\t\r\nPrivate 4\theroku-postgresql:private-4\t15 GB\t        512 GB\t        500\t\r\nPrivate 5\theroku-postgresql:private-5\t30 GB\t        1 TB\t        500\t\r\nPrivate 6\theroku-postgresql:private-6\t60 GB\t        1 TB\t        500\t\r\nPrivate 7\theroku-postgresql:private-7\t120 GB\t        1 TB\t        500\t\r\n\r\n## Configure it for Heroku Private-Postgres\r\n\r\nMake sure you've configured (or added manually) the two Heroku Config VARs below: \r\n\r\nAUTH_USER = username (the one you'll use to hit this app, not your Private-Postgres username)\r\nAUTH_PASS = password (the one you'll use to hit this app, not your Private-Postgres password)\r\n\r\nYour Procfile (create blank file called Procfile, no extension) will look like this:\r\n\r\nweb: pgweb --url=$DATABASE_URL --listen=$PORT --bind=0.0.0.0 --auth-user=$AUTH_USER --auth-pass=$AUTH_PASS\r\n\r\n## Testing\r\n\r\nBefore running tests, make sure you have PostgreSQL server running on the same Heroku App that you're deploying this to (you can add Postgres after you've deployed this if you're putting the Cart before teh proverbial Horse (ie `yourPrivateSpaces_postgresserver.herokuapp.com:5432)\r\n\r\n\r\nExecute test suite:\r\n\r\n```\r\nmake test\r\n```\r\n\r\nIf you're using Docker locally, you might also run pgweb test suite against\r\nall supported PostgreSQL version with a single command:\r\n\r\n```\r\nmake test-all\r\n```\r\n\r\n## Contribute\r\n\r\n- Fork this repository\r\n- Create a new feature branch for a new functionality or bugfix\r\n- Commit your changes\r\n- Execute test suite\r\n- Push your code and open a new pull request\r\n- Use [issues](https://github.com/sosedoff/pgweb/issues) for any questions\r\n- Check [wiki](https://github.com/sosedoff/pgweb/wiki) for extra documentation\r\n\r\n## Contact\r\n\r\n- Dan Sosedoff\r\n- [dan.sosedoff@gmail.com](mailto:dan.sosedoff@gmail.com)\r\n- [http://twitter.com/sosedoff](http://twitter.com/sosedoff)\r\n\r\n## License\r\n\r\nThe MIT License (MIT)\r\n\r\nCopyright (c) 2014-2016 Dan Sosedoff, <dan.sosedoff@gmail.com>\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}